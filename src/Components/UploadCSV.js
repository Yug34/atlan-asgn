import React from "react";
import "../css/UploadCSV.css";

function UploadCSV(props) {
  function handleBadInput(warning) {
    //Hide drop image
    displayDiv("dropImageContainer", "none");
    //Show faulty input SVG
    displayDiv("dropSvgContainer", "block");
    //Display error message in center div
    document.getElementById("dragTextContainer").innerText = `${warning}`;
  }

  function displayDiv(divName, display) {
    // Check if the div is referred to through an id
    if (document.getElementById(divName)) {
      document.getElementById(divName).style.display = display;
    }
    // If not id, must be a class
    else {
      for (let element of document.getElementsByClassName(divName)) {
        element.style.display = display;
      }
    }
  }

  return (
    <div className="upload">
      <button
        onClick={() => (displayDiv("myModal", "block"))}
        id="uploadButton"
      >
        Upload CSV
      </button>
      <div id="myModal" className="modal">
        <div className="modal-content">
          <div id="linkContainer">
            <div id="linkAreaContainer">
              <textarea
                placeholder="Enter link here"
                id="linkInput"
                defaultValue="https://raw.githubusercontent.com/Yug34/atlan-asgn/master/dataFiles/customers.csv"
              />
              <button
                id="linkSubmitButton"
                onClick={() => {
                  if (document.getElementById("linkInput").value === "") {
                    handleBadInput("Looks like you entered nothing in the link box, try again!");
                    return;
                  }
                  props.uploadViaLink(
                    document.getElementById("linkInput").value
                  );
                  props.setQuery(
                    "-- Enter SQL Query here:\n" +
                      "-- You can also change the separator\n" +
                      '  SELECT * FROM CSV(?, {headers: true, separator:","})'
                  );
                  // document.getElementById("myModal").style.display = "none";
                  displayDiv("myModal", "none");
                }}
              >
                Fetch CSV from URL
              </button>
            </div>
          </div>
          <div
            className="dragDrop"
            onDragOver={(e) => props.dragOverHandler(e)}
            onDrop={(e) => props.dropHandler(e)}
          >
            <div id="dragTextContainer">Drag and drop a CSV file here</div>
            <div id="dropImageContainer">
              <img
                id="dropImage"
                src="https://raw.githubusercontent.com/Yug34/atlan-asgn/master/src/img/dropFile.png"
                alt="dropImage"
              />
            </div>
            <div id="dropSvgContainer">
                <svg width="240" height="180" viewBox="0 0 240 180">
                    <polygon fill="#ffffff" points="48.272 90 47.992 92.516 50.542 91.805 50.768 93.527 48.443 93.691 49.968 95.722 48.416 96.549 47.35 94.409 46.413 96.535 44.8 95.722 46.311 93.691 44 93.514 44.267 91.805 46.762 92.516 46.481 90"/>
                    <polygon fill="#ffffff" points="199.272 81 198.992 83.516 201.542 82.805 201.768 84.527 199.443 84.691 200.968 86.722 199.416 87.549 198.35 85.409 197.413 87.535 195.8 86.722 197.311 84.691 195 84.514 195.267 82.805 197.762 83.516 197.481 81"/>
                    <polygon fill="#ffffff" points="193.778 148.071 197.314 144.536 198.021 145.243 194.485 148.778 198.021 152.314 197.314 153.021 193.778 149.485 190.243 153.021 189.536 152.314 193.071 148.778 189.536 145.243 190.243 144.536"/>
                    <path fill="#ffffff" fillRule="nonzero" d="M208.496902 136.96305C209.875903 136.96305 210.993804 135.852033 210.993804 134.481525 210.993804 133.111017 209.875903 132 208.496902 132 207.117901 132 206 133.111017 206 134.481525 206 135.852033 207.117901 136.96305 208.496902 136.96305zM208.496902 136.00305C207.646771 136.00305 206.96 135.320508 206.96 134.481525 206.96 133.642542 207.646771 132.96 208.496902 132.96 209.347032 132.96 210.033804 133.642542 210.033804 134.481525 210.033804 135.320508 209.347032 136.00305 208.496902 136.00305zM131.496902 28.96305C132.875903 28.96305 133.993804 27.8520334 133.993804 26.481525 133.993804 25.1110166 132.875903 24 131.496902 24 130.117901 24 129 25.1110166 129 26.481525 129 27.8520334 130.117901 28.96305 131.496902 28.96305zM131.496902 28.00305C130.646771 28.00305 129.96 27.320508 129.96 26.481525 129.96 25.642542 130.646771 24.96 131.496902 24.96 132.347032 24.96 133.033804 25.642542 133.033804 26.481525 133.033804 27.320508 132.347032 28.00305 131.496902 28.00305z"/>
                    <path fill="#ffffff" fillRule="nonzero" d="M50 63L54 67 50 71 50 76 18 76 18 58 50 58 50 63zM24.6855469 71.1621094C24.6855469 71.4785172 24.7753897 71.7236319 24.9550781 71.8974609 25.1347665 72.0712899 25.3886702 72.1582031 25.7167969 72.1582031 26.037111 72.1582031 26.2871085 72.0693368 26.4667969 71.8916016 26.6464853 71.7138663 26.7363281 71.4707047 26.7363281 71.1621094 26.7363281 70.8417953 26.6474618 70.595704 26.4697266 70.4238281 26.2919913 70.2519523 26.0410172 70.1660156 25.7167969 70.1660156 25.3808577 70.1660156 25.1250009 70.2499992 24.9492188 70.4179688 24.7734366 70.5859383 24.6855469 70.8339827 24.6855469 71.1621094zM28.1015625 71.1621094C28.1015625 71.4785172 28.1914054 71.7236319 28.3710938 71.8974609 28.5507821 72.0712899 28.806639 72.1582031 29.1386719 72.1582031 29.458986 72.1582031 29.7089835 72.0693368 29.8886719 71.8916016 30.0683603 71.7138663 30.1582031 71.4707047 30.1582031 71.1621094 30.1582031 70.8417953 30.0693368 70.595704 29.8916016 70.4238281 29.7138663 70.2519523 29.4628922 70.1660156 29.1386719 70.1660156 28.7988264 70.1660156 28.5410165 70.2499992 28.3652344 70.4179688 28.1894522 70.5859383 28.1015625 70.8339827 28.1015625 71.1621094zM31.5234375 71.1621094C31.5234375 71.4785172 31.6132804 71.7236319 31.7929688 71.8974609 31.9726571 72.0712899 32.2265609 72.1582031 32.5546875 72.1582031 32.8750016 72.1582031 33.1249991 72.0693368 33.3046875 71.8916016 33.4843759 71.7138663 33.5742188 71.4707047 33.5742188 71.1621094 33.5742188 70.8417953 33.4853525 70.595704 33.3076172 70.4238281 33.1298819 70.2519523 32.8789079 70.1660156 32.5546875 70.1660156 32.2187483 70.1660156 31.9628915 70.2499992 31.7871094 70.4179688 31.6113272 70.5859383 31.5234375 70.8339827 31.5234375 71.1621094zM36.6972656 69.1582031L36.9960938 63.4335938 34.96875 63.4335938 35.2675781 69.1582031 36.6972656 69.1582031zM34.9453125 71.1621094C34.9453125 71.4785172 35.0351554 71.7236319 35.2148438 71.8974609 35.3945321 72.0712899 35.6484359 72.1582031 35.9765625 72.1582031 36.2968766 72.1582031 36.5468741 72.0693368 36.7265625 71.8916016 36.9062509 71.7138663 36.9960938 71.4707047 36.9960938 71.1621094 36.9960938 70.8417953 36.9072275 70.595704 36.7294922 70.4238281 36.5517569 70.2519523 36.3007829 70.1660156 35.9765625 70.1660156 35.6406233 70.1660156 35.3847665 70.2499992 35.2089844 70.4179688 35.0332022 70.5859383 34.9453125 70.8339827 34.9453125 71.1621094zM39.3105469 69.1582031L40.8632812 69.1582031 40.8632812 68.8066406C40.8632812 68.5722645 40.9130854 68.3828132 41.0126953 68.2382812 41.1123052 68.0937493 41.3496075 67.8828139 41.7246094 67.6054688 42.2714871 67.2148418 42.6425771 66.8632828 42.8378906 66.5507812 43.0332041 66.2382797 43.1308594 65.8671896 43.1308594 65.4375 43.1308594 64.7929655 42.8935571 64.2773457 42.4189453 63.890625 41.9443336 63.5039043 41.3046915 63.3105469 40.5 63.3105469 39.5234326 63.3105469 38.5996137 63.5546851 37.7285156 64.0429688L38.3671875 65.3261719C39.1171913 64.9433575 39.7851533 64.7519531 40.3710938 64.7519531 40.7070329 64.7519531 40.9687491 64.8183587 41.15625 64.9511719 41.3437509 65.083985 41.4375 65.2773425 41.4375 65.53125 41.4375 65.7578136 41.372071 65.9628897 41.2412109 66.1464844 41.1103509 66.330079 40.8398458 66.5683579 40.4296875 66.8613281 40.0039041 67.1738297 39.7109383 67.4687486 39.5507812 67.7460938 39.3906242 68.0234389 39.3105469 68.3496075 39.3105469 68.7246094L39.3105469 69.1582031zM39.1230469 71.1621094C39.1230469 71.4785172 39.2128897 71.7236319 39.3925781 71.8974609 39.5722665 72.0712899 39.8261702 72.1582031 40.1542969 72.1582031 40.474611 72.1582031 40.7246085 72.0693368 40.9042969 71.8916016 41.0839853 71.7138663 41.1738281 71.4707047 41.1738281 71.1621094 41.1738281 70.8417953 41.0849618 70.595704 40.9072266 70.4238281 40.7294913 70.2519523 40.4785172 70.1660156 40.1542969 70.1660156 39.8183577 70.1660156 39.5625009 70.2499992 39.3867188 70.4179688 39.2109366 70.5859383 39.1230469 70.8339827 39.1230469 71.1621094zM190 108L190 103 222 103 222 121 190 121 190 116 186 112 190 108zM197.685547 116.162109C197.685547 116.478517 197.77539 116.723632 197.955078 116.897461 198.134767 117.07129 198.38867 117.158203 198.716797 117.158203 199.037111 117.158203 199.287108 117.069337 199.466797 116.891602 199.646485 116.713866 199.736328 116.470705 199.736328 116.162109 199.736328 115.841795 199.647462 115.595704 199.469727 115.423828 199.291991 115.251952 199.041017 115.166016 198.716797 115.166016 198.380858 115.166016 198.125001 115.249999 197.949219 115.417969 197.773437 115.585938 197.685547 115.833983 197.685547 116.162109zM201.101562 116.162109C201.101562 116.478517 201.191405 116.723632 201.371094 116.897461 201.550782 117.07129 201.806639 117.158203 202.138672 117.158203 202.458986 117.158203 202.708983 117.069337 202.888672 116.891602 203.06836 116.713866 203.158203 116.470705 203.158203 116.162109 203.158203 115.841795 203.069337 115.595704 202.891602 115.423828 202.713866 115.251952 202.462892 115.166016 202.138672 115.166016 201.798826 115.166016 201.541017 115.249999 201.365234 115.417969 201.189452 115.585938 201.101562 115.833983 201.101562 116.162109zM204.523438 116.162109C204.523438 116.478517 204.61328 116.723632 204.792969 116.897461 204.972657 117.07129 205.226561 117.158203 205.554688 117.158203 205.875002 117.158203 206.124999 117.069337 206.304688 116.891602 206.484376 116.713866 206.574219 116.470705 206.574219 116.162109 206.574219 115.841795 206.485352 115.595704 206.307617 115.423828 206.129882 115.251952 205.878908 115.166016 205.554688 115.166016 205.218748 115.166016 204.962892 115.249999 204.787109 115.417969 204.611327 115.585938 204.523438 115.833983 204.523438 116.162109zM209.697266 114.158203L209.996094 108.433594 207.96875 108.433594 208.267578 114.158203 209.697266 114.158203zM207.945312 116.162109C207.945312 116.478517 208.035155 116.723632 208.214844 116.897461 208.394532 117.07129 208.648436 117.158203 208.976562 117.158203 209.296877 117.158203 209.546874 117.069337 209.726562 116.891602 209.906251 116.713866 209.996094 116.470705 209.996094 116.162109 209.996094 115.841795 209.907227 115.595704 209.729492 115.423828 209.551757 115.251952 209.300783 115.166016 208.976562 115.166016 208.640623 115.166016 208.384767 115.249999 208.208984 115.417969 208.033202 115.585938 207.945312 115.833983 207.945312 116.162109zM212.310547 114.158203L213.863281 114.158203 213.863281 113.806641C213.863281 113.572264 213.913085 113.382813 214.012695 113.238281 214.112305 113.093749 214.349607 112.882814 214.724609 112.605469 215.271487 112.214842 215.642577 111.863283 215.837891 111.550781 216.033204 111.23828 216.130859 110.86719 216.130859 110.4375 216.130859 109.792966 215.893557 109.277346 215.418945 108.890625 214.944334 108.503904 214.304692 108.310547 213.5 108.310547 212.523433 108.310547 211.599614 108.554685 210.728516 109.042969L211.367188 110.326172C212.117191 109.943357 212.785153 109.751953 213.371094 109.751953 213.707033 109.751953 213.968749 109.818359 214.15625 109.951172 214.343751 110.083985 214.4375 110.277342 214.4375 110.53125 214.4375 110.757814 214.372071 110.96289 214.241211 111.146484 214.110351 111.330079 213.839846 111.568358 213.429688 111.861328 213.003904 112.17383 212.710938 112.468749 212.550781 112.746094 212.390624 113.023439 212.310547 113.349608 212.310547 113.724609L212.310547 114.158203zM212.123047 116.162109C212.123047 116.478517 212.21289 116.723632 212.392578 116.897461 212.572267 117.07129 212.82617 117.158203 213.154297 117.158203 213.474611 117.158203 213.724608 117.069337 213.904297 116.891602 214.083985 116.713866 214.173828 116.470705 214.173828 116.162109 214.173828 115.841795 214.084962 115.595704 213.907227 115.423828 213.729491 115.251952 213.478517 115.166016 213.154297 115.166016 212.818358 115.166016 212.562501 115.249999 212.386719 115.417969 212.210937 115.585938 212.123047 115.833983 212.123047 116.162109z"/>
                    <polygon fill="#ffffff" points="144.272 38 143.992 40.516 146.542 39.805 146.768 41.527 144.443 41.691 145.968 43.722 144.416 44.549 143.35 42.409 142.413 44.535 140.8 43.722 142.311 41.691 140 41.514 140.267 39.805 142.762 40.516 142.481 38"/>
                    <path fill="#ffffff" fillRule="nonzero" d="M163.527722,62.2018863 L122.683739,58.6285008 C121.03319,58.4840965 119.578092,59.7050683 119.433688,61.3556177 L112.809851,137.066415 C112.665447,138.716964 113.886419,140.172062 115.536968,140.316466 L173.316261,145.371499 C174.96681,145.515904 176.421908,144.294932 176.566312,142.644382 L181.708501,83.8688951 L163.776996,82.3000917 L161.784607,82.1257803 L163.527722,62.2018863 Z M165.396854,63.7850298 L163.951308,80.3077023 L180.47398,81.7532489 L165.396854,63.7850298 Z M122.858051,56.6361114 L165.110865,60.3327537 L183.824147,82.6343745 L178.558702,142.818694 C178.318028,145.569609 175.892865,147.604562 173.141949,147.363889 L115.362657,142.308855 C112.611741,142.068182 110.576788,139.643019 110.817462,136.892103 L117.441298,61.1813062 C117.681972,58.4303905 120.107135,56.3954375 122.858051,56.6361114 Z"/>
                    <path fill="#FF0040" d="M147.215598,134.965752 C133.960764,134.965752 123.215598,124.220586 123.215598,110.965752 C123.215598,97.7109183 133.960764,86.9657523 147.215598,86.9657523 C160.470432,86.9657523 171.215598,97.7109183 171.215598,110.965752 C171.215598,124.220586 160.470432,134.965752 147.215598,134.965752 Z M147.215598,109.553988 L136.627363,98.9657523 L135.215598,100.377517 L145.803834,110.965752 L135.215598,121.553988 L136.627363,122.965752 L147.215598,112.377517 L157.803834,122.965752 L159.215598,121.553988 L148.627363,110.965752 L159.215598,100.377517 L157.803834,98.9657523 L147.215598,109.553988 Z" transform="rotate(5 147.216 110.966)"/>
                    <path fill="#ffffff" fillRule="nonzero" d="M121.04796,49.2909276 L103.116455,50.8597309 L101.124066,51.0340424 L99.3809509,31.1101485 L58.5369683,34.6835339 C56.8864189,34.8279383 55.6654471,36.2830358 55.8098514,37.9335852 L62.4336879,113.644382 C62.5780922,115.294932 64.0331898,116.515904 65.6837392,116.371499 L65.8580507,118.363889 C63.107135,118.604562 60.6819724,116.569609 60.4412985,113.818694 L53.817462,38.1078967 C53.5767881,35.356981 55.6117411,32.9318185 58.3626568,32.6911445 L100.615471,28.9945022 L122.917092,47.707784 L123.79706,57.7658585 L121.80467,57.94017 L121.04796,49.2909276 Z M119.464816,47.421795 L101.496597,32.344669 L102.942144,48.8673415 L119.464816,47.421795 Z M113.827998,112.159422 L114.002309,114.151812 L83.5506597,116.815986 L83.3763482,114.823596 L113.827998,112.159422 Z M77.7446426,76.3857 L79.5737581,74.205845 C79.8512835,73.8751031 80.3872807,73.8679592 80.7709414,74.1898887 C81.154602,74.5118182 81.2406416,75.040913 80.9631162,75.3716549 L79.1340007,77.5515099 L81.3138556,79.3806254 C81.6445976,79.6581508 81.6517415,80.194148 81.3298119,80.5778087 C81.0078824,80.9614693 80.4787877,81.0475089 80.1480458,80.7699835 L77.9681908,78.940868 L76.1390753,81.1207229 C75.8615499,81.4514649 75.3255526,81.4586088 74.941892,81.1366792 C74.5582313,80.8147497 74.4721917,80.285655 74.7497172,79.9549131 L76.5788327,77.7750581 L74.3989777,75.9459426 C74.0682358,75.6684172 74.0610919,75.1324199 74.3830214,74.7487593 C74.7049509,74.3650986 75.2340457,74.279059 75.5647876,74.5565845 L77.7446426,76.3857 Z M104.641899,74.0324949 L106.471015,71.85264 C106.74854,71.521898 107.284538,71.5147541 107.668198,71.8366836 C108.051859,72.1586132 108.137898,72.6877079 107.860373,73.0184498 L106.031258,75.1983048 L108.211112,77.0274203 C108.541854,77.3049457 108.548998,77.840943 108.227069,78.2246036 C107.905139,78.6082643 107.376045,78.6943038 107.045303,78.4167784 L104.865448,76.5876629 L103.036332,78.7675179 C102.758807,79.0982598 102.222809,79.1054037 101.839149,78.7834742 C101.455488,78.4615447 101.369449,77.9324499 101.646974,77.601708 L103.47609,75.421853 L101.296235,73.5927375 C100.965493,73.3152121 100.958349,72.7792149 101.280278,72.3955542 C101.602208,72.0118936 102.131303,71.925854 102.462044,72.2033794 L104.641899,74.0324949 Z M95.7316989,92.6624267 L95.383076,88.6776479 L81.2940869,89.9102748 C80.8224736,89.9515356 80.4011346,89.5389725 80.3529998,88.9887894 C80.304865,88.4386062 80.6481621,87.9591462 81.1197754,87.9178854 L103.320585,85.9755662 L104.174517,85.9008569 L104.697451,91.878025 C104.88999,94.0787576 103.039022,96.0383981 100.563198,96.2550047 C98.0873739,96.4716112 95.9242381,94.8631593 95.7316989,92.6624267 Z M97.5248494,92.5055464 C97.6403729,93.8259859 98.9382544,94.7910571 100.423749,94.6610932 C101.909243,94.5311292 103.019824,93.3553449 102.904301,92.0349054 L102.555678,88.0501266 L97.1762264,88.5207676 L97.5248494,92.5055464 Z"/>
                    <path fill="#FF0040" fillRule="nonzero" d="M76.4579941,101.046744 L91.1579853,128.145724 C91.6846652,129.116642 91.3245389,130.330685 90.3536208,130.857365 C90.0608509,131.01618 89.7330534,131.099363 89.3999824,131.099363 L60,131.099363 C58.8954305,131.099363 58,130.203932 58,129.099363 C58,128.766292 58.0831826,128.438494 58.2419972,128.145724 L72.9419884,101.046744 C73.4686683,100.075826 74.6827114,99.7156997 75.6536296,100.24238 C75.9939563,100.426992 76.2733819,100.706417 76.4579941,101.046744 Z M76.1174187,120.285393 L76.7002759,111.099363 L72.7459902,111.099363 L73.3288473,120.285393 L76.1174187,120.285393 Z M72.7002759,123.500974 C72.7002759,124.0087 72.8755122,124.402025 73.2259902,124.680961 C73.5764681,124.959897 74.0717013,125.099363 74.7117045,125.099363 C75.3364695,125.099363 75.8240837,124.956763 76.1745616,124.671559 C76.5250395,124.386355 76.7002759,123.996164 76.7002759,123.500974 C76.7002759,122.98698 76.5269443,122.592088 76.1802759,122.316287 C75.8336075,122.040485 75.3440886,121.902586 74.7117045,121.902586 C74.0564631,121.902586 73.5574205,122.037351 73.2145616,122.306884 C72.8717027,122.576418 72.7002759,122.974444 72.7002759,123.500974 Z"/>
                </svg>
            </div>
          </div>
          <div id="csvDataInput">
            <div id="csvInputContainer">
              <textarea placeholder="Type/paste CSV content here" id="enter" />
              <button
                id="enterBtn"
                onClick={() => {
                  if (document.getElementById("enter").value === "") {
                    handleBadInput(
                      "Looks like you submitted an empty input, try again!"
                    );
                    return;
                  }
                  props.setData(document.getElementById("enter").value);
                  props.setQuery(
                    "-- Enter SQL Query here:\n" +
                      "-- You can also change the separator\n" +
                      '  SELECT * FROM CSV(?, {headers: true, separator:","})'
                  );
                  // document.getElementById("myModal").style.display = "none";
                  displayDiv("myModal", "none");
                }}
              >
                Enter CSV
              </button>
            </div>
          </div>
          <span
            // onClick={() => (document.getElementById("myModal").style.display = "none")}
            onClick={() => displayDiv("myModal", "none")}
            id="closeModalBtn"
          >
            &times;
          </span>
        </div>
      </div>
    </div>
  );
}

export default UploadCSV;
